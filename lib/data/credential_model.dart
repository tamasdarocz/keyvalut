class Credential {
  final int? id;
  final String title;
  final String? website;
  final String? email;
  final String username;
  final String password;

  Credential({
    this.id,
    required this.title,
    this.website,
    this.email,
    required this.username,
    required this.password,
  });

  // Convert a Credential into a Map
  Map<String, dynamic> toMap() {
    return {
      'id': id,
      'title': title,
      'website': website,
      'email': email,
      'username': username,
      'password': password,
    };
  }

  // Convert a Map into a Credential
  factory Credential.fromMap(Map<String, dynamic> map) {
    return Credential(
      id: map['id'],
      title: map['title'],
      website: map['website'],
      email: map['email'],
      username: map['username'],
      password: map['password'],
    );
  }

  // Convert a Credential to JSON (excluding id for export)
  Map<String, dynamic> toJson() => {
        'title': title,
        'website': website,
        'email': email,
        'username': username,
        'password': password,
      };

  // Create a Credential from JSON (id will be generated by the database)
  factory Credential.fromJson(Map<String, dynamic> json) => Credential(
        title: json['title'] ?? '',
        website: json['website'],
        email: json['email'],
        username: json['username'] ?? '',
        password: json['password'] ?? '',
      );
}

class CreditCard {
  final int? id;
  final String title;
  final String? bank_name;
  final String ch_name;
  final String card_number;
  final String expiry_date;
  final String cvv;
  final String? card_type; // Visa, Mastercard, etc.
  final String? billing_address;
  final bool? is_default;
  final String? notes;

  CreditCard({
    this.id,
    required this.title,
    this.bank_name,
    required this.ch_name,
    required this.card_number,
    required this.expiry_date,
    required this.cvv,
    this.card_type,
    this.billing_address,
    this.is_default = false,
    this.notes,
  });

  // Convert a CreditCard into a Map
  Map<String, dynamic> toMap() {
    return {
      'id': id,
      'title': title,
      'bank_name': bank_name,
      'ch_name': ch_name,
      'card_number': card_number,
      'expiry_date': expiry_date,
      'cvv': cvv,
      'card_type': card_type,
      'billing_address': billing_address,
      'is_default': is_default == true ? 1 : 0,
      'notes': notes,
    };
  }

  // Convert a Map into a CreditCard
  factory CreditCard.fromMap(Map<String, dynamic> map) {
    return CreditCard(
      id: map['id'],
      title: map['title'],
      bank_name: map['bank_name'],
      ch_name: map['ch_name'],
      card_number: map['card_number'],
      expiry_date: map['expiry_date'],
      cvv: map['cvv'],
      card_type: map['card_type'],
      billing_address: map['billing_address'],
      is_default: map['is_default'] == 1,
      notes: map['notes'],
    );
  }

  // Convert a CreditCard to JSON (excluding id for export)
  Map<String, dynamic> toJson() => {
        'title': title,
        'bank_name': bank_name,
        'ch_name': ch_name,
        'card_number': card_number,
        'expiry_date': expiry_date,
        'cvv': cvv,
        'card_type': card_type,
        'billing_address': billing_address,
        'is_default': is_default,
        'notes': notes,
      };

  // Create a CreditCard from JSON (id will be generated by the database)
  factory CreditCard.fromJson(Map<String, dynamic> json) => CreditCard(
        title: json['title'] ?? '',
        bank_name: json['bank_name'],
        ch_name: json['ch_name'] ?? '',
        card_number: json['card_number'] ?? '',
        expiry_date: json['expiry_date'] ?? '',
        cvv: json['cvv'] ?? '',
        card_type: json['card_type'],
        billing_address: json['billing_address'],
        is_default: json['is_default'],
        notes: json['notes'],
      );
}

class Note {
  final int? id;
  final String title;
  final String? category;
  final String content;
  final DateTime created_at;
  final DateTime? updated_at;
  final bool? is_pinned;

  Note({
    this.id,
    required this.title,
    this.category,
    required this.content,
    DateTime? created_at,
    this.updated_at,
    this.is_pinned = false,
  }) : created_at = created_at ?? DateTime.now();

  // Convert a Note into a Map
  Map<String, dynamic> toMap() {
    return {
      'id': id,
      'title': title,
      'category': category,
      'content': content,
      'created_at': created_at.toIso8601String(),
      'updated_at': updated_at?.toIso8601String(),
      'is_pinned': is_pinned == true ? 1 : 0,
    };
  }

  // Convert a Map into a Note
  factory Note.fromMap(Map<String, dynamic> map) {
    return Note(
      id: map['id'],
      title: map['title'],
      category: map['category'],
      content: map['content'],
      created_at: DateTime.parse(map['created_at']),
      updated_at:
          map['updated_at'] != null ? DateTime.parse(map['updated_at']) : null,
      is_pinned: map['is_pinned'] == 1,
    );
  }

  // Convert a Note to JSON (excluding id for export)
  Map<String, dynamic> toJson() => {
        'title': title,
        'category': category,
        'content': content,
        'created_at': created_at.toIso8601String(),
        'updated_at': updated_at?.toIso8601String(),
        'is_pinned': is_pinned,
      };

  // Create a Note from JSON (id will be generated by the database)
  factory Note.fromJson(Map<String, dynamic> json) => Note(
        title: json['title'] ?? '',
        category: json['category'],
        content: json['content'] ?? '',
        created_at: json['created_at'] != null
            ? DateTime.parse(json['created_at'])
            : null,
        updated_at: json['updated_at'] != null
            ? DateTime.parse(json['updated_at'])
            : null,
        is_pinned: json['is_pinned'],
      );
}
